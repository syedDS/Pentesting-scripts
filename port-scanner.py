import optparse
from socket import *
from threading import *


def connScan(tgtHost, tgtPort):
    try:
        connSkt = socket(AF_INET, SOCK_STREAM)  # using Ipv4 -AF_IFNET and SOCK_STREAM for tcp just change it to SOCK_DGRAM
        result = connSkt.connect_ex((tgtHost,tgtPort))
        if result == 0:
            connSkt.connect((tgtHost, tgtPort))
            print ('\033[0:32;1m'"[+] %d/tcp open" % tgtPort)
            print ('\033[m')
        else:
            print ('\033[0:31;1m'"[-] %d/tcp closed" % tgtPort)
            print ('\033[m')
    finally:
        connSkt.close()

def portScan(tgtHost, tgtPorts):
    try:
        tgtIP = gethostbyname(tgtHost)
    except:
        print ("[-] Cannot resolve '%s': Unknown host" %tgtHost)
        return

    try:
        tgtName = gethostbyaddr(tgtIP)
        print ("\n[+] Scan Results for: " + tgtName[0])
    except:
        print ('\n[+] Scan Results for: ' + tgtIP)

    setdefaulttimeout(1)
    for tgtPort in tgtPorts:
        t = Thread(target=connScan,args=(tgtHost,int(tgtPort)))
        t.start()

def main():
    tgtPorts=[20,21,23,25,53,67,68,69,80,110,123,137,138,139,143,161,162,179,389,443,636,989,990]   # added the tcp list of ports in list
    parser = optparse.OptionParser('usage %prog '+\
      '-H <target host-name/IP-Address>')
    parser.add_option('-H', dest='tgtHost', type='string',\
      help='specify target host')
    #parser.add_option('-p', dest='tgtPort', type='string',\   # no need to parse tgtports as it already given as list
    #help='specify target port[s] separated by comma')
    (options, args) = parser.parse_args()
    tgtHost = options.tgtHost
    #tgtPorts = str(options.tgtPort).split(',')

    if (tgtHost == None) | (tgtPorts[0] == None):
        print (parser.usage)
        exit(0)
    portScan(tgtHost, tgtPorts)
if __name__ == '__main__':
    main()
