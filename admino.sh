#!/bin/bash
################################################################################
#       Help admino script                                                     #
#02/09/2021   Syed Aamiruddin  Original code  for enableing help feature for    #
#                              admino
################################################################################

help()
{
 echo "Welcome to the Admino system information script"
 echo "Please follow the following instructions to use it"
 echo
 echo "- admino -h --> provides hostname information."
 echo "- admino -i <interface> --> provides the IP address of provided <interface>"
 echo "- admino -u --> provides the list of users of the system"
 echo "- admino -g <groupname> --> provides the list of users for an specifig   <group> "
 echo "- admino -t <user> --> provides the directory list tree for a system <user>"
 echo "- admino -l --> provides the list of IPs from last remote connections"
 echo "- admino -p --> provides the top 10 processes which are using more %memory"
 echo "- admino -s --> provides the list of SUDO invoked commands from logs file"
}

distinctive()
{
  #show tcp or protcol input given
  read -p "enter the protocol for port scanning:-" prot
  sudo netstat -anp | grep "$prot"
  echo "current user loggged in":
  who
  echo "list of last 10 running process by all users":
  lsof |awk '{print $1 " " $2 "  " $4 "  " 10}'|uniq |head
  echo "list of last 10 running process by root":
  lsof |awk '{print $1 " " $2 "  " $4 "  " 10}'| grep root |uniq
  #check if namp is installed on subsystem
  echo " check for if nmap is installed"
   pkg="nmap"
    if timeout 10s sudo yum list installed $pkg
    then
    echo "enter the port number to scanned"
     read pno
    #run nmap for port
     nmap localhost| grep pno
    else
    echo "$pkg NOT installed"
    fi
  }

#read option
echo "argument is $1"

  case $1 in
    --help) #display help
          help;;
    -h) # host information
       hostnamectl
       ;;
    -i) # ip address of interface
       if [ $# == 2 ]
       then
         ifconfig|grep $2
       else
        echo "need 2 argument ,please enter interface id too"
       fi
       ;;

    -u) #list of users of system
       echo "The list of users of your system are:"
      # cut -d: {'print-'} -f 1 /etc/passwd
      #shows single column with format
       awk -F: ' {print "-" $1}' /etc/passwd
       ;;

     -g)#list of users for an specific <group>
        #cmd shows all good but not working in gen program
          read -p "enter the group name " grp

          getent group | awk -F: '{ if ($1== "grp" ) print "\n - "  $4;}'
           ;;
    -t)#directory list tree for a system

       if [ $# == 2 ]
       then
       echo "Directory list for user:$2"
       sudo tree -f -L 2 |grep  $2
     else
       echo "need enter second argument i.e directory name"
     fi
       ;;

     -d)#distinctive security function for following tasks
        #bash for checking port scan for certain protocol if nmap install
        # Current user
             distinctive
        exit;;

    -l)##list of IPs from last remote connections

        re='/^\d*\.?\d*$/'
        echo "(Con.#) (IP Add)"
      # last|awk  '{if ( $3 eq re ) print $3}'|sort | uniq -c | sort -nr

       #working for showing all in 3 col with number of instance need to filler for ip
        last| awk '{print $3}' | sort | uniq -c | sort -nr
       exit;;

   -p)

       ##top 10 processes which are using more %memory
       # i have listed all the column required in ps command
       ps -eo user,pid,%cpu,%mem,vsz,rss,tty,stat,start,time,command  | head
       exit;;
    -s)#list of SUDO invoked commands from logs file"
        #check if root , and show the all command of sudo related from secure file, in debian secure stores sudo log and whereas in ubunto its in audit.logs
          sudo cat /var/log/secure |grep sudo |awk '{print "Date:"$1" "$2" " $3" "$5 " COMMAND="$14 " "$15 }'
        #give dat command in format
       exit;;

    *) #incorrect option
        echo "Error :invalid arguments expected input in format :admino --help"
        exit;;
  esac
